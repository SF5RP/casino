"use strict";
/*
 * ATTENTION: An "eval-source-map" devtool has been used.
 * This devtool is neither made for production nor for readable output files.
 * It uses "eval()" calls to create a separate source file with attached SourceMaps in the browser devtools.
 * If you are trying to read the output file, select a different devtool (https://webpack.js.org/configuration/devtool/)
 * or disable the default devtool with "devtool: false".
 * If you are looking for production-ready output files, see mode: "production" (https://webpack.js.org/configuration/mode/).
 */
self["webpackHotUpdate_N_E"]("app/page",{

/***/ "(app-pages-browser)/./src/components/casino/hooks/useRouletteSettings.ts":
/*!************************************************************!*\
  !*** ./src/components/casino/hooks/useRouletteSettings.ts ***!
  \************************************************************/
/***/ ((module, __webpack_exports__, __webpack_require__) => {

eval(__webpack_require__.ts("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   useRouletteSettings: () => (/* binding */ useRouletteSettings)\n/* harmony export */ });\n/* harmony import */ var react__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! react */ \"(app-pages-browser)/./node_modules/next/dist/compiled/react/index.js\");\n/* harmony import */ var react__WEBPACK_IMPORTED_MODULE_0___default = /*#__PURE__*/__webpack_require__.n(react__WEBPACK_IMPORTED_MODULE_0__);\n\nfunction useRouletteSettings(windowWidth) {\n    const [historyRows, setHistoryRows] = (0,react__WEBPACK_IMPORTED_MODULE_0__.useState)({\n        \"useRouletteSettings.useState\": ()=>{\n            if (true) {\n                const saved = localStorage.getItem('roulette-history-rows');\n                return saved ? parseInt(saved, 10) : 3;\n            }\n            return 3;\n        }\n    }[\"useRouletteSettings.useState\"]);\n    // Вычисляем параметры отображения истории\n    const { itemsPerRow, maxVisibleItems } = (0,react__WEBPACK_IMPORTED_MODULE_0__.useMemo)({\n        \"useRouletteSettings.useMemo\": ()=>{\n            const itemBaseWidth = 32; // базовая ширина ячейки\n            const itemBorder = 4; // 2px border с каждой стороны (2px * 2 = 4px)\n            const itemGap = 8; // gap между элементами (gap={1} в MUI = 8px)\n            const containerPadding = 64; // отступы контейнера (p={4} = 32px с каждой стороны = 64px)\n            const safetyBuffer = 16; // буфер для безопасности и возможных scrollbar\n            const availableWidth = windowWidth - containerPadding - safetyBuffer;\n            // Для расчета учитываем что последний элемент не имеет gap справа\n            // Формула: n * (itemWidth + border) + (n-1) * gap <= availableWidth\n            // Где n - количество элементов в строке\n            const itemWithBorder = itemBaseWidth + itemBorder; // 32 + 4 = 36px\n            const calculatedItemsPerRow = Math.max(1, Math.floor((availableWidth + itemGap) / (itemWithBorder + itemGap)));\n            const calculatedMaxVisibleItems = Math.max(calculatedItemsPerRow * historyRows, 15); // используем настраиваемое количество строк\n            return {\n                itemsPerRow: calculatedItemsPerRow,\n                maxVisibleItems: calculatedMaxVisibleItems\n            };\n        }\n    }[\"useRouletteSettings.useMemo\"], [\n        windowWidth,\n        historyRows\n    ]);\n    // Функция для обновления количества строк истории\n    const updateHistoryRows = (newRows)=>{\n        setHistoryRows(newRows);\n        localStorage.setItem('roulette-history-rows', newRows.toString());\n    };\n    return {\n        historyRows,\n        itemsPerRow,\n        maxVisibleItems,\n        updateHistoryRows\n    };\n}\n\n\n;\n    // Wrapped in an IIFE to avoid polluting the global scope\n    ;\n    (function () {\n        var _a, _b;\n        // Legacy CSS implementations will `eval` browser code in a Node.js context\n        // to extract CSS. For backwards compatibility, we need to check we're in a\n        // browser context before continuing.\n        if (typeof self !== 'undefined' &&\n            // AMP / No-JS mode does not inject these helpers:\n            '$RefreshHelpers$' in self) {\n            // @ts-ignore __webpack_module__ is global\n            var currentExports = module.exports;\n            // @ts-ignore __webpack_module__ is global\n            var prevSignature = (_b = (_a = module.hot.data) === null || _a === void 0 ? void 0 : _a.prevSignature) !== null && _b !== void 0 ? _b : null;\n            // This cannot happen in MainTemplate because the exports mismatch between\n            // templating and execution.\n            self.$RefreshHelpers$.registerExportsForReactRefresh(currentExports, module.id);\n            // A module can be accepted automatically based on its exports, e.g. when\n            // it is a Refresh Boundary.\n            if (self.$RefreshHelpers$.isReactRefreshBoundary(currentExports)) {\n                // Save the previous exports signature on update so we can compare the boundary\n                // signatures. We avoid saving exports themselves since it causes memory leaks (https://github.com/vercel/next.js/pull/53797)\n                module.hot.dispose(function (data) {\n                    data.prevSignature =\n                        self.$RefreshHelpers$.getRefreshBoundarySignature(currentExports);\n                });\n                // Unconditionally accept an update to this module, we'll check if it's\n                // still a Refresh Boundary later.\n                // @ts-ignore importMeta is replaced in the loader\n                module.hot.accept();\n                // This field is set when the previous version of this module was a\n                // Refresh Boundary, letting us know we need to check for invalidation or\n                // enqueue an update.\n                if (prevSignature !== null) {\n                    // A boundary can become ineligible if its exports are incompatible\n                    // with the previous exports.\n                    //\n                    // For example, if you add/remove/change exports, we'll want to\n                    // re-execute the importing modules, and force those components to\n                    // re-render. Similarly, if you convert a class component to a\n                    // function, we want to invalidate the boundary.\n                    if (self.$RefreshHelpers$.shouldInvalidateReactRefreshBoundary(prevSignature, self.$RefreshHelpers$.getRefreshBoundarySignature(currentExports))) {\n                        module.hot.invalidate();\n                    }\n                    else {\n                        self.$RefreshHelpers$.scheduleUpdate();\n                    }\n                }\n            }\n            else {\n                // Since we just executed the code for the module, it's possible that the\n                // new exports made it ineligible for being a boundary.\n                // We only care about the case when we were _previously_ a boundary,\n                // because we already accepted this update (accidental side effect).\n                var isNoLongerABoundary = prevSignature !== null;\n                if (isNoLongerABoundary) {\n                    module.hot.invalidate();\n                }\n            }\n        }\n    })();\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiKGFwcC1wYWdlcy1icm93c2VyKS8uL3NyYy9jb21wb25lbnRzL2Nhc2luby9ob29rcy91c2VSb3VsZXR0ZVNldHRpbmdzLnRzIiwibWFwcGluZ3MiOiI7Ozs7OztBQUEwQztBQUVuQyxTQUFTRSxvQkFBb0JDLFdBQW1CO0lBQ3JELE1BQU0sQ0FBQ0MsYUFBYUMsZUFBZSxHQUFHTCwrQ0FBUUE7d0NBQUM7WUFDN0MsSUFBSSxJQUE2QixFQUFFO2dCQUNqQyxNQUFNTSxRQUFRQyxhQUFhQyxPQUFPLENBQUM7Z0JBQ25DLE9BQU9GLFFBQVFHLFNBQVNILE9BQU8sTUFBTTtZQUN2QztZQUNBLE9BQU87UUFDVDs7SUFFQSwwQ0FBMEM7SUFDMUMsTUFBTSxFQUFFSSxXQUFXLEVBQUVDLGVBQWUsRUFBRSxHQUFHViw4Q0FBT0E7dUNBQUM7WUFDL0MsTUFBTVcsZ0JBQWdCLElBQUksd0JBQXdCO1lBQ2xELE1BQU1DLGFBQWEsR0FBRyw4Q0FBOEM7WUFDcEUsTUFBTUMsVUFBVSxHQUFHLDZDQUE2QztZQUNoRSxNQUFNQyxtQkFBbUIsSUFBSSw0REFBNEQ7WUFDekYsTUFBTUMsZUFBZSxJQUFJLCtDQUErQztZQUN4RSxNQUFNQyxpQkFBaUJkLGNBQWNZLG1CQUFtQkM7WUFFeEQsa0VBQWtFO1lBQ2xFLG9FQUFvRTtZQUNwRSx3Q0FBd0M7WUFDeEMsTUFBTUUsaUJBQWlCTixnQkFBZ0JDLFlBQVksZ0JBQWdCO1lBQ25FLE1BQU1NLHdCQUF3QkMsS0FBS0MsR0FBRyxDQUFDLEdBQUdELEtBQUtFLEtBQUssQ0FBQyxDQUFDTCxpQkFBaUJILE9BQU0sSUFBTUksQ0FBQUEsaUJBQWlCSixPQUFNO1lBQzFHLE1BQU1TLDRCQUE0QkgsS0FBS0MsR0FBRyxDQUFDRix3QkFBd0JmLGFBQWEsS0FBSyw0Q0FBNEM7WUFFakksT0FBTztnQkFDTE0sYUFBYVM7Z0JBQ2JSLGlCQUFpQlk7WUFDbkI7UUFDRjtzQ0FBRztRQUFDcEI7UUFBYUM7S0FBWTtJQUU3QixrREFBa0Q7SUFDbEQsTUFBTW9CLG9CQUFvQixDQUFDQztRQUN6QnBCLGVBQWVvQjtRQUNmbEIsYUFBYW1CLE9BQU8sQ0FBQyx5QkFBeUJELFFBQVFFLFFBQVE7SUFDaEU7SUFFQSxPQUFPO1FBQ0x2QjtRQUNBTTtRQUNBQztRQUNBYTtJQUNGO0FBQ0YiLCJzb3VyY2VzIjpbIkM6XFxVc2Vyc1xccGxvdG5pa292YXlcXFdlYnN0b3JtUHJvamVjdHNcXGNhc2lub1xcc3JjXFxjb21wb25lbnRzXFxjYXNpbm9cXGhvb2tzXFx1c2VSb3VsZXR0ZVNldHRpbmdzLnRzIl0sInNvdXJjZXNDb250ZW50IjpbImltcG9ydCB7IHVzZVN0YXRlLCB1c2VNZW1vIH0gZnJvbSAncmVhY3QnO1xyXG5cclxuZXhwb3J0IGZ1bmN0aW9uIHVzZVJvdWxldHRlU2V0dGluZ3Mod2luZG93V2lkdGg6IG51bWJlcikge1xyXG4gIGNvbnN0IFtoaXN0b3J5Um93cywgc2V0SGlzdG9yeVJvd3NdID0gdXNlU3RhdGUoKCkgPT4ge1xyXG4gICAgaWYgKHR5cGVvZiB3aW5kb3cgIT09ICd1bmRlZmluZWQnKSB7XHJcbiAgICAgIGNvbnN0IHNhdmVkID0gbG9jYWxTdG9yYWdlLmdldEl0ZW0oJ3JvdWxldHRlLWhpc3Rvcnktcm93cycpO1xyXG4gICAgICByZXR1cm4gc2F2ZWQgPyBwYXJzZUludChzYXZlZCwgMTApIDogMztcclxuICAgIH1cclxuICAgIHJldHVybiAzO1xyXG4gIH0pO1xyXG5cclxuICAvLyDQktGL0YfQuNGB0LvRj9C10Lwg0L/QsNGA0LDQvNC10YLRgNGLINC+0YLQvtCx0YDQsNC20LXQvdC40Y8g0LjRgdGC0L7RgNC40LhcclxuICBjb25zdCB7IGl0ZW1zUGVyUm93LCBtYXhWaXNpYmxlSXRlbXMgfSA9IHVzZU1lbW8oKCkgPT4ge1xyXG4gICAgY29uc3QgaXRlbUJhc2VXaWR0aCA9IDMyOyAvLyDQsdCw0LfQvtCy0LDRjyDRiNC40YDQuNC90LAg0Y/Rh9C10LnQutC4XHJcbiAgICBjb25zdCBpdGVtQm9yZGVyID0gNDsgLy8gMnB4IGJvcmRlciDRgSDQutCw0LbQtNC+0Lkg0YHRgtC+0YDQvtC90YsgKDJweCAqIDIgPSA0cHgpXHJcbiAgICBjb25zdCBpdGVtR2FwID0gODsgLy8gZ2FwINC80LXQttC00YMg0Y3Qu9C10LzQtdC90YLQsNC80LggKGdhcD17MX0g0LIgTVVJID0gOHB4KVxyXG4gICAgY29uc3QgY29udGFpbmVyUGFkZGluZyA9IDY0OyAvLyDQvtGC0YHRgtGD0L/RiyDQutC+0L3RgtC10LnQvdC10YDQsCAocD17NH0gPSAzMnB4INGBINC60LDQttC00L7QuSDRgdGC0L7RgNC+0L3RiyA9IDY0cHgpXHJcbiAgICBjb25zdCBzYWZldHlCdWZmZXIgPSAxNjsgLy8g0LHRg9GE0LXRgCDQtNC70Y8g0LHQtdC30L7Qv9Cw0YHQvdC+0YHRgtC4INC4INCy0L7Qt9C80L7QttC90YvRhSBzY3JvbGxiYXJcclxuICAgIGNvbnN0IGF2YWlsYWJsZVdpZHRoID0gd2luZG93V2lkdGggLSBjb250YWluZXJQYWRkaW5nIC0gc2FmZXR5QnVmZmVyO1xyXG4gICAgXHJcbiAgICAvLyDQlNC70Y8g0YDQsNGB0YfQtdGC0LAg0YPRh9C40YLRi9Cy0LDQtdC8INGH0YLQviDQv9C+0YHQu9C10LTQvdC40Lkg0Y3Qu9C10LzQtdC90YIg0L3QtSDQuNC80LXQtdGCIGdhcCDRgdC/0YDQsNCy0LBcclxuICAgIC8vINCk0L7RgNC80YPQu9CwOiBuICogKGl0ZW1XaWR0aCArIGJvcmRlcikgKyAobi0xKSAqIGdhcCA8PSBhdmFpbGFibGVXaWR0aFxyXG4gICAgLy8g0JPQtNC1IG4gLSDQutC+0LvQuNGH0LXRgdGC0LLQviDRjdC70LXQvNC10L3RgtC+0LIg0LIg0YHRgtGA0L7QutC1XHJcbiAgICBjb25zdCBpdGVtV2l0aEJvcmRlciA9IGl0ZW1CYXNlV2lkdGggKyBpdGVtQm9yZGVyOyAvLyAzMiArIDQgPSAzNnB4XHJcbiAgICBjb25zdCBjYWxjdWxhdGVkSXRlbXNQZXJSb3cgPSBNYXRoLm1heCgxLCBNYXRoLmZsb29yKChhdmFpbGFibGVXaWR0aCArIGl0ZW1HYXApIC8gKGl0ZW1XaXRoQm9yZGVyICsgaXRlbUdhcCkpKTtcclxuICAgIGNvbnN0IGNhbGN1bGF0ZWRNYXhWaXNpYmxlSXRlbXMgPSBNYXRoLm1heChjYWxjdWxhdGVkSXRlbXNQZXJSb3cgKiBoaXN0b3J5Um93cywgMTUpOyAvLyDQuNGB0L/QvtC70YzQt9GD0LXQvCDQvdCw0YHRgtGA0LDQuNCy0LDQtdC80L7QtSDQutC+0LvQuNGH0LXRgdGC0LLQviDRgdGC0YDQvtC6XHJcbiAgICBcclxuICAgIHJldHVybiB7XHJcbiAgICAgIGl0ZW1zUGVyUm93OiBjYWxjdWxhdGVkSXRlbXNQZXJSb3csXHJcbiAgICAgIG1heFZpc2libGVJdGVtczogY2FsY3VsYXRlZE1heFZpc2libGVJdGVtc1xyXG4gICAgfTtcclxuICB9LCBbd2luZG93V2lkdGgsIGhpc3RvcnlSb3dzXSk7XHJcblxyXG4gIC8vINCk0YPQvdC60YbQuNGPINC00LvRjyDQvtCx0L3QvtCy0LvQtdC90LjRjyDQutC+0LvQuNGH0LXRgdGC0LLQsCDRgdGC0YDQvtC6INC40YHRgtC+0YDQuNC4XHJcbiAgY29uc3QgdXBkYXRlSGlzdG9yeVJvd3MgPSAobmV3Um93czogbnVtYmVyKSA9PiB7XHJcbiAgICBzZXRIaXN0b3J5Um93cyhuZXdSb3dzKTtcclxuICAgIGxvY2FsU3RvcmFnZS5zZXRJdGVtKCdyb3VsZXR0ZS1oaXN0b3J5LXJvd3MnLCBuZXdSb3dzLnRvU3RyaW5nKCkpO1xyXG4gIH07XHJcblxyXG4gIHJldHVybiB7XHJcbiAgICBoaXN0b3J5Um93cyxcclxuICAgIGl0ZW1zUGVyUm93LFxyXG4gICAgbWF4VmlzaWJsZUl0ZW1zLFxyXG4gICAgdXBkYXRlSGlzdG9yeVJvd3MsXHJcbiAgfTtcclxufSAiXSwibmFtZXMiOlsidXNlU3RhdGUiLCJ1c2VNZW1vIiwidXNlUm91bGV0dGVTZXR0aW5ncyIsIndpbmRvd1dpZHRoIiwiaGlzdG9yeVJvd3MiLCJzZXRIaXN0b3J5Um93cyIsInNhdmVkIiwibG9jYWxTdG9yYWdlIiwiZ2V0SXRlbSIsInBhcnNlSW50IiwiaXRlbXNQZXJSb3ciLCJtYXhWaXNpYmxlSXRlbXMiLCJpdGVtQmFzZVdpZHRoIiwiaXRlbUJvcmRlciIsIml0ZW1HYXAiLCJjb250YWluZXJQYWRkaW5nIiwic2FmZXR5QnVmZmVyIiwiYXZhaWxhYmxlV2lkdGgiLCJpdGVtV2l0aEJvcmRlciIsImNhbGN1bGF0ZWRJdGVtc1BlclJvdyIsIk1hdGgiLCJtYXgiLCJmbG9vciIsImNhbGN1bGF0ZWRNYXhWaXNpYmxlSXRlbXMiLCJ1cGRhdGVIaXN0b3J5Um93cyIsIm5ld1Jvd3MiLCJzZXRJdGVtIiwidG9TdHJpbmciXSwiaWdub3JlTGlzdCI6W10sInNvdXJjZVJvb3QiOiIifQ==\n//# sourceURL=webpack-internal:///(app-pages-browser)/./src/components/casino/hooks/useRouletteSettings.ts\n"));

/***/ })

});