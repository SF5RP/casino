"use strict";
/*
 * ATTENTION: An "eval-source-map" devtool has been used.
 * This devtool is neither made for production nor for readable output files.
 * It uses "eval()" calls to create a separate source file with attached SourceMaps in the browser devtools.
 * If you are trying to read the output file, select a different devtool (https://webpack.js.org/configuration/devtool/)
 * or disable the default devtool with "devtool: false".
 * If you are looking for production-ready output files, see mode: "production" (https://webpack.js.org/configuration/mode/).
 */
self["webpackHotUpdate_N_E"]("app/page",{

/***/ "(app-pages-browser)/./src/components/casino/utils/rouletteUtils.ts":
/*!******************************************************!*\
  !*** ./src/components/casino/utils/rouletteUtils.ts ***!
  \******************************************************/
/***/ ((module, __webpack_exports__, __webpack_require__) => {

eval(__webpack_require__.ts("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   calculateAgeMap: () => (/* binding */ calculateAgeMap),\n/* harmony export */   calculateGroupAge: () => (/* binding */ calculateGroupAge),\n/* harmony export */   findRepeats: () => (/* binding */ findRepeats),\n/* harmony export */   getContrastText: () => (/* binding */ getContrastText),\n/* harmony export */   getNumberColor: () => (/* binding */ getNumberColor),\n/* harmony export */   getProgressColor: () => (/* binding */ getProgressColor),\n/* harmony export */   getRepeatIndexes: () => (/* binding */ getRepeatIndexes)\n/* harmony export */ });\n/* harmony import */ var _constants_rouletteConstants__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ../constants/rouletteConstants */ \"(app-pages-browser)/./src/components/casino/constants/rouletteConstants.ts\");\n\nfunction getContrastText(bgColor) {\n    // Удаляем # если есть\n    if (bgColor.startsWith('#')) bgColor = bgColor.slice(1);\n    // Преобразуем в rgb\n    let r = 0, g = 0, b = 0;\n    if (bgColor.length === 3) {\n        r = parseInt(bgColor[0] + bgColor[0], 16);\n        g = parseInt(bgColor[1] + bgColor[1], 16);\n        b = parseInt(bgColor[2] + bgColor[2], 16);\n    } else if (bgColor.length === 6) {\n        r = parseInt(bgColor.slice(0, 2), 16);\n        g = parseInt(bgColor.slice(2, 4), 16);\n        b = parseInt(bgColor.slice(4, 6), 16);\n    }\n    // Яркость по формуле WCAG\n    const brightness = (r * 299 + g * 587 + b * 114) / 1000;\n    return brightness > 140 ? '#222' : '#fff';\n}\nfunction getNumberColor(num) {\n    if (num === 0 || num === '00') return '#2ecc71'; // зеленый для 0 и 00\n    if (_constants_rouletteConstants__WEBPACK_IMPORTED_MODULE_0__.RED_NUMBERS.has(num)) return '#e74c3c';\n    if (_constants_rouletteConstants__WEBPACK_IMPORTED_MODULE_0__.BLACK_NUMBERS.has(num)) return '#2c3e50';\n    return '#bdc3c7';\n}\nfunction calculateAgeMap(history) {\n    const ageMap = {};\n    for(let i = 0; i <= 36; i++){\n        const index = [\n            ...history\n        ].reverse().findIndex((v)=>v === i);\n        ageMap[String(i)] = index === -1 ? history.length : index;\n    }\n    ageMap['00'] = [\n        ...history\n    ].reverse().findIndex((v)=>v === '00');\n    if (ageMap['00'] === -1) ageMap['00'] = history.length;\n    return ageMap;\n}\nfunction getProgressColor(count) {\n    // Плавная градация от зеленого через желтый к оранжевому\n    // Нормализуем значение от 0 до 1 для диапазона 0-100\n    const normalizedCount = Math.min(count / 100, 1);\n    if (normalizedCount <= 0.2) {\n        // 0-20: Зеленый\n        return '#22c55e';\n    } else if (normalizedCount <= 0.4) {\n        // 20-40: Зеленый → Светло-зеленый\n        const progress = (normalizedCount - 0.2) / 0.2;\n        return interpolateColor('#22c55e', '#84cc16', progress);\n    } else if (normalizedCount <= 0.6) {\n        // 40-60: Светло-зеленый → Желто-зеленый\n        const progress = (normalizedCount - 0.4) / 0.2;\n        return interpolateColor('#84cc16', '#eab308', progress);\n    } else if (normalizedCount <= 0.8) {\n        // 60-80: Желто-зеленый → Желтый\n        const progress = (normalizedCount - 0.6) / 0.2;\n        return interpolateColor('#eab308', '#f59e0b', progress);\n    } else {\n        // 80-100: Желтый → Оранжевый\n        const progress = (normalizedCount - 0.8) / 0.2;\n        return interpolateColor('#f59e0b', '#ea580c', progress);\n    }\n}\n// Функция для интерполяции между двумя цветами\nfunction interpolateColor(color1, color2, factor) {\n    // Преобразуем hex в RGB\n    const hex1 = color1.replace('#', '');\n    const hex2 = color2.replace('#', '');\n    const r1 = parseInt(hex1.substr(0, 2), 16);\n    const g1 = parseInt(hex1.substr(2, 2), 16);\n    const b1 = parseInt(hex1.substr(4, 2), 16);\n    const r2 = parseInt(hex2.substr(0, 2), 16);\n    const g2 = parseInt(hex2.substr(2, 2), 16);\n    const b2 = parseInt(hex2.substr(4, 2), 16);\n    // Интерполируем каждый канал\n    const r = Math.round(r1 + (r2 - r1) * factor);\n    const g = Math.round(g1 + (g2 - g1) * factor);\n    const b = Math.round(b1 + (b2 - b1) * factor);\n    // Преобразуем обратно в hex\n    return \"#\".concat(r.toString(16).padStart(2, '0')).concat(g.toString(16).padStart(2, '0')).concat(b.toString(16).padStart(2, '0'));\n}\nfunction calculateGroupAge(history, group) {\n    let groupAge = history.length;\n    for(let i = history.length - 1; i >= 0; i--){\n        if (group.includes(history[i])) {\n            groupAge = history.length - 1 - i;\n            break;\n        }\n    }\n    return groupAge;\n}\nfunction findRepeats(history) {\n    const repeats = [];\n    let i = 0;\n    while(i < history.length - 1){\n        let j = i;\n        while(j + 1 < history.length && history[j] === history[j + 1]){\n            j++;\n        }\n        if (j > i) {\n            repeats.push({\n                value: history[i],\n                start: i + 1,\n                length: j - i + 1\n            });\n            i = j + 1;\n        } else {\n            i++;\n        }\n    }\n    return repeats;\n}\nfunction getRepeatIndexes(history) {\n    const repeatIndexes = new Set();\n    let i = 0;\n    while(i < history.length - 1){\n        let j = i;\n        while(j + 1 < history.length && history[j] === history[j + 1]){\n            j++;\n        }\n        if (j > i) {\n            for(let k = i; k <= j; k++)repeatIndexes.add(k);\n            i = j + 1;\n        } else {\n            i++;\n        }\n    }\n    return repeatIndexes;\n}\n\n\n;\n    // Wrapped in an IIFE to avoid polluting the global scope\n    ;\n    (function () {\n        var _a, _b;\n        // Legacy CSS implementations will `eval` browser code in a Node.js context\n        // to extract CSS. For backwards compatibility, we need to check we're in a\n        // browser context before continuing.\n        if (typeof self !== 'undefined' &&\n            // AMP / No-JS mode does not inject these helpers:\n            '$RefreshHelpers$' in self) {\n            // @ts-ignore __webpack_module__ is global\n            var currentExports = module.exports;\n            // @ts-ignore __webpack_module__ is global\n            var prevSignature = (_b = (_a = module.hot.data) === null || _a === void 0 ? void 0 : _a.prevSignature) !== null && _b !== void 0 ? _b : null;\n            // This cannot happen in MainTemplate because the exports mismatch between\n            // templating and execution.\n            self.$RefreshHelpers$.registerExportsForReactRefresh(currentExports, module.id);\n            // A module can be accepted automatically based on its exports, e.g. when\n            // it is a Refresh Boundary.\n            if (self.$RefreshHelpers$.isReactRefreshBoundary(currentExports)) {\n                // Save the previous exports signature on update so we can compare the boundary\n                // signatures. We avoid saving exports themselves since it causes memory leaks (https://github.com/vercel/next.js/pull/53797)\n                module.hot.dispose(function (data) {\n                    data.prevSignature =\n                        self.$RefreshHelpers$.getRefreshBoundarySignature(currentExports);\n                });\n                // Unconditionally accept an update to this module, we'll check if it's\n                // still a Refresh Boundary later.\n                // @ts-ignore importMeta is replaced in the loader\n                module.hot.accept();\n                // This field is set when the previous version of this module was a\n                // Refresh Boundary, letting us know we need to check for invalidation or\n                // enqueue an update.\n                if (prevSignature !== null) {\n                    // A boundary can become ineligible if its exports are incompatible\n                    // with the previous exports.\n                    //\n                    // For example, if you add/remove/change exports, we'll want to\n                    // re-execute the importing modules, and force those components to\n                    // re-render. Similarly, if you convert a class component to a\n                    // function, we want to invalidate the boundary.\n                    if (self.$RefreshHelpers$.shouldInvalidateReactRefreshBoundary(prevSignature, self.$RefreshHelpers$.getRefreshBoundarySignature(currentExports))) {\n                        module.hot.invalidate();\n                    }\n                    else {\n                        self.$RefreshHelpers$.scheduleUpdate();\n                    }\n                }\n            }\n            else {\n                // Since we just executed the code for the module, it's possible that the\n                // new exports made it ineligible for being a boundary.\n                // We only care about the case when we were _previously_ a boundary,\n                // because we already accepted this update (accidental side effect).\n                var isNoLongerABoundary = prevSignature !== null;\n                if (isNoLongerABoundary) {\n                    module.hot.invalidate();\n                }\n            }\n        }\n    })();\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,\n//# sourceURL=webpack-internal:///(app-pages-browser)/./src/components/casino/utils/rouletteUtils.ts\n"));

/***/ })

});