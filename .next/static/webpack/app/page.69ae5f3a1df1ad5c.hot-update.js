"use strict";
/*
 * ATTENTION: An "eval-source-map" devtool has been used.
 * This devtool is neither made for production nor for readable output files.
 * It uses "eval()" calls to create a separate source file with attached SourceMaps in the browser devtools.
 * If you are trying to read the output file, select a different devtool (https://webpack.js.org/configuration/devtool/)
 * or disable the default devtool with "devtool: false".
 * If you are looking for production-ready output files, see mode: "production" (https://webpack.js.org/configuration/mode/).
 */
self["webpackHotUpdate_N_E"]("app/page",{

/***/ "(app-pages-browser)/./src/components/casino/utils/rouletteUtils.ts":
/*!******************************************************!*\
  !*** ./src/components/casino/utils/rouletteUtils.ts ***!
  \******************************************************/
/***/ ((module, __webpack_exports__, __webpack_require__) => {

eval(__webpack_require__.ts("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   calculateAgeMap: () => (/* binding */ calculateAgeMap),\n/* harmony export */   calculateGroupAge: () => (/* binding */ calculateGroupAge),\n/* harmony export */   findRepeats: () => (/* binding */ findRepeats),\n/* harmony export */   getContrastText: () => (/* binding */ getContrastText),\n/* harmony export */   getNumberColor: () => (/* binding */ getNumberColor),\n/* harmony export */   getProgressColor: () => (/* binding */ getProgressColor),\n/* harmony export */   getRepeatIndexes: () => (/* binding */ getRepeatIndexes)\n/* harmony export */ });\n/* harmony import */ var _constants_rouletteConstants__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ../constants/rouletteConstants */ \"(app-pages-browser)/./src/components/casino/constants/rouletteConstants.ts\");\n\nfunction getContrastText(bgColor) {\n    // –£–¥–∞–ª—è–µ–º # –µ—Å–ª–∏ –µ—Å—Ç—å\n    if (bgColor.startsWith('#')) bgColor = bgColor.slice(1);\n    // –ü—Ä–µ–æ–±—Ä–∞–∑—É–µ–º –≤ rgb\n    let r = 0, g = 0, b = 0;\n    if (bgColor.length === 3) {\n        r = parseInt(bgColor[0] + bgColor[0], 16);\n        g = parseInt(bgColor[1] + bgColor[1], 16);\n        b = parseInt(bgColor[2] + bgColor[2], 16);\n    } else if (bgColor.length === 6) {\n        r = parseInt(bgColor.slice(0, 2), 16);\n        g = parseInt(bgColor.slice(2, 4), 16);\n        b = parseInt(bgColor.slice(4, 6), 16);\n    }\n    // –Ø—Ä–∫–æ—Å—Ç—å –ø–æ —Ñ–æ—Ä–º—É–ª–µ WCAG\n    const brightness = (r * 299 + g * 587 + b * 114) / 1000;\n    return brightness > 140 ? '#222' : '#fff';\n}\nfunction getNumberColor(num) {\n    if (num === 0 || num === '00') return '#2ecc71'; // –∑–µ–ª–µ–Ω—ã–π –¥–ª—è 0 –∏ 00\n    if (_constants_rouletteConstants__WEBPACK_IMPORTED_MODULE_0__.RED_NUMBERS.has(num)) return '#e74c3c';\n    if (_constants_rouletteConstants__WEBPACK_IMPORTED_MODULE_0__.BLACK_NUMBERS.has(num)) return '#2c3e50';\n    return '#bdc3c7';\n}\nfunction calculateAgeMap(history) {\n    console.time('calculateAgeMap');\n    console.log('üó∫Ô∏è –†–∞—Å—á–µ—Ç AgeMap, —Ä–∞–∑–º–µ—Ä –∏—Å—Ç–æ—Ä–∏–∏:', history.length);\n    const startTime = performance.now();\n    const ageMap = {};\n    const reversedHistory = [\n        ...history\n    ].reverse(); // –°–æ–∑–¥–∞–µ–º –æ–¥–∏–Ω —Ä–∞–∑\n    const reverseTime = performance.now();\n    console.log(\"\\uD83D\\uDD04 –†–µ–≤–µ—Ä—Å –∏—Å—Ç–æ—Ä–∏–∏: \".concat((reverseTime - startTime).toFixed(2), \"ms\"));\n    for(let i = 0; i <= 36; i++){\n        const index = reversedHistory.findIndex((v)=>v === i);\n        ageMap[String(i)] = index === -1 ? history.length : index;\n    }\n    const numbersTime = performance.now();\n    console.log(\"\\uD83D\\uDD22 –û–±—Ä–∞–±–æ—Ç–∫–∞ —á–∏—Å–µ–ª 0-36: \".concat((numbersTime - reverseTime).toFixed(2), \"ms\"));\n    ageMap['00'] = reversedHistory.findIndex((v)=>v === '00');\n    if (ageMap['00'] === -1) ageMap['00'] = history.length;\n    const endTime = performance.now();\n    console.log(\"‚úÖ calculateAgeMap –∑–∞–≤–µ—Ä—à–µ–Ω: \".concat((endTime - startTime).toFixed(2), \"ms\"));\n    console.timeEnd('calculateAgeMap');\n    return ageMap;\n}\n// –ö—ç—à –¥–ª—è —Ü–≤–µ—Ç–æ–≤ –ø—Ä–æ–≥—Ä–µ—Å—Å–∞\nconst progressColorCache = new Map();\nfunction getProgressColor(count) {\n    // –ü—Ä–æ–≤–µ—Ä—è–µ–º –∫—ç—à\n    if (progressColorCache.has(count)) {\n        return progressColorCache.get(count);\n    }\n    // –ü–ª–∞–≤–Ω–∞—è –≥—Ä–∞–¥–∞—Ü–∏—è –æ—Ç –∑–µ–ª–µ–Ω–æ–≥–æ —á–µ—Ä–µ–∑ –∂–µ–ª—Ç—ã–π –∫ –æ—Ä–∞–Ω–∂–µ–≤–æ–º—É\n    // –ù–æ—Ä–º–∞–ª–∏–∑—É–µ–º –∑–Ω–∞—á–µ–Ω–∏–µ –æ—Ç 0 –¥–æ 1 –¥–ª—è –¥–∏–∞–ø–∞–∑–æ–Ω–∞ 0-100\n    const normalizedCount = Math.min(count / 100, 1);\n    let color;\n    if (normalizedCount <= 0.2) {\n        // 0-20: –ó–µ–ª–µ–Ω—ã–π\n        color = '#22c55e';\n    } else if (normalizedCount <= 0.4) {\n        // 20-40: –ó–µ–ª–µ–Ω—ã–π ‚Üí –°–≤–µ—Ç–ª–æ-–∑–µ–ª–µ–Ω—ã–π\n        const progress = (normalizedCount - 0.2) / 0.2;\n        color = interpolateColor('#22c55e', '#84cc16', progress);\n    } else if (normalizedCount <= 0.6) {\n        // 40-60: –°–≤–µ—Ç–ª–æ-–∑–µ–ª–µ–Ω—ã–π ‚Üí –ñ–µ–ª—Ç–æ-–∑–µ–ª–µ–Ω—ã–π\n        const progress = (normalizedCount - 0.4) / 0.2;\n        color = interpolateColor('#84cc16', '#eab308', progress);\n    } else if (normalizedCount <= 0.8) {\n        // 60-80: –ñ–µ–ª—Ç–æ-–∑–µ–ª–µ–Ω—ã–π ‚Üí –ñ–µ–ª—Ç—ã–π\n        const progress = (normalizedCount - 0.6) / 0.2;\n        color = interpolateColor('#eab308', '#f59e0b', progress);\n    } else {\n        // 80-100: –ñ–µ–ª—Ç—ã–π ‚Üí –û—Ä–∞–Ω–∂–µ–≤—ã–π\n        const progress = (normalizedCount - 0.8) / 0.2;\n        color = interpolateColor('#f59e0b', '#ea580c', progress);\n    }\n    // –ö—ç—à–∏—Ä—É–µ–º —Ä–µ–∑—É–ª—å—Ç–∞—Ç\n    progressColorCache.set(count, color);\n    return color;\n}\n// –§—É–Ω–∫—Ü–∏—è –¥–ª—è –∏–Ω—Ç–µ—Ä–ø–æ–ª—è—Ü–∏–∏ –º–µ–∂–¥—É –¥–≤—É–º—è —Ü–≤–µ—Ç–∞–º–∏\nfunction interpolateColor(color1, color2, factor) {\n    // –ü—Ä–µ–æ–±—Ä–∞–∑—É–µ–º hex –≤ RGB\n    const hex1 = color1.replace('#', '');\n    const hex2 = color2.replace('#', '');\n    const r1 = parseInt(hex1.substr(0, 2), 16);\n    const g1 = parseInt(hex1.substr(2, 2), 16);\n    const b1 = parseInt(hex1.substr(4, 2), 16);\n    const r2 = parseInt(hex2.substr(0, 2), 16);\n    const g2 = parseInt(hex2.substr(2, 2), 16);\n    const b2 = parseInt(hex2.substr(4, 2), 16);\n    // –ò–Ω—Ç–µ—Ä–ø–æ–ª–∏—Ä—É–µ–º –∫–∞–∂–¥—ã–π –∫–∞–Ω–∞–ª\n    const r = Math.round(r1 + (r2 - r1) * factor);\n    const g = Math.round(g1 + (g2 - g1) * factor);\n    const b = Math.round(b1 + (b2 - b1) * factor);\n    // –ü—Ä–µ–æ–±—Ä–∞–∑—É–µ–º –æ–±—Ä–∞—Ç–Ω–æ –≤ hex\n    return \"#\".concat(r.toString(16).padStart(2, '0')).concat(g.toString(16).padStart(2, '0')).concat(b.toString(16).padStart(2, '0'));\n}\nfunction calculateGroupAge(history, group) {\n    let groupAge = history.length;\n    for(let i = history.length - 1; i >= 0; i--){\n        if (group.includes(history[i])) {\n            groupAge = history.length - 1 - i;\n            break;\n        }\n    }\n    return groupAge;\n}\nfunction findRepeats(history) {\n    const repeats = [];\n    let i = 0;\n    while(i < history.length - 1){\n        let j = i;\n        while(j + 1 < history.length && history[j] === history[j + 1]){\n            j++;\n        }\n        if (j > i) {\n            repeats.push({\n                value: history[i],\n                start: i + 1,\n                length: j - i + 1\n            });\n            i = j + 1;\n        } else {\n            i++;\n        }\n    }\n    return repeats;\n}\nfunction getRepeatIndexes(history) {\n    const repeatIndexes = new Set();\n    let i = 0;\n    while(i < history.length - 1){\n        let j = i;\n        while(j + 1 < history.length && history[j] === history[j + 1]){\n            j++;\n        }\n        if (j > i) {\n            for(let k = i; k <= j; k++)repeatIndexes.add(k);\n            i = j + 1;\n        } else {\n            i++;\n        }\n    }\n    return repeatIndexes;\n}\n\n\n;\n    // Wrapped in an IIFE to avoid polluting the global scope\n    ;\n    (function () {\n        var _a, _b;\n        // Legacy CSS implementations will `eval` browser code in a Node.js context\n        // to extract CSS. For backwards compatibility, we need to check we're in a\n        // browser context before continuing.\n        if (typeof self !== 'undefined' &&\n            // AMP / No-JS mode does not inject these helpers:\n            '$RefreshHelpers$' in self) {\n            // @ts-ignore __webpack_module__ is global\n            var currentExports = module.exports;\n            // @ts-ignore __webpack_module__ is global\n            var prevSignature = (_b = (_a = module.hot.data) === null || _a === void 0 ? void 0 : _a.prevSignature) !== null && _b !== void 0 ? _b : null;\n            // This cannot happen in MainTemplate because the exports mismatch between\n            // templating and execution.\n            self.$RefreshHelpers$.registerExportsForReactRefresh(currentExports, module.id);\n            // A module can be accepted automatically based on its exports, e.g. when\n            // it is a Refresh Boundary.\n            if (self.$RefreshHelpers$.isReactRefreshBoundary(currentExports)) {\n                // Save the previous exports signature on update so we can compare the boundary\n                // signatures. We avoid saving exports themselves since it causes memory leaks (https://github.com/vercel/next.js/pull/53797)\n                module.hot.dispose(function (data) {\n                    data.prevSignature =\n                        self.$RefreshHelpers$.getRefreshBoundarySignature(currentExports);\n                });\n                // Unconditionally accept an update to this module, we'll check if it's\n                // still a Refresh Boundary later.\n                // @ts-ignore importMeta is replaced in the loader\n                module.hot.accept();\n                // This field is set when the previous version of this module was a\n                // Refresh Boundary, letting us know we need to check for invalidation or\n                // enqueue an update.\n                if (prevSignature !== null) {\n                    // A boundary can become ineligible if its exports are incompatible\n                    // with the previous exports.\n                    //\n                    // For example, if you add/remove/change exports, we'll want to\n                    // re-execute the importing modules, and force those components to\n                    // re-render. Similarly, if you convert a class component to a\n                    // function, we want to invalidate the boundary.\n                    if (self.$RefreshHelpers$.shouldInvalidateReactRefreshBoundary(prevSignature, self.$RefreshHelpers$.getRefreshBoundarySignature(currentExports))) {\n                        module.hot.invalidate();\n                    }\n                    else {\n                        self.$RefreshHelpers$.scheduleUpdate();\n                    }\n                }\n            }\n            else {\n                // Since we just executed the code for the module, it's possible that the\n                // new exports made it ineligible for being a boundary.\n                // We only care about the case when we were _previously_ a boundary,\n                // because we already accepted this update (accidental side effect).\n                var isNoLongerABoundary = prevSignature !== null;\n                if (isNoLongerABoundary) {\n                    module.hot.invalidate();\n                }\n            }\n        }\n    })();\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,\n//# sourceURL=webpack-internal:///(app-pages-browser)/./src/components/casino/utils/rouletteUtils.ts\n"));

/***/ })

});